//*N√çVEL B√ÅSICO
// //! ATIVIDADE 1 - Contagem de 1 a 10
// for (let i = 1; i <= 10; i++){ // enquanto i for menor igual a 10 ele imprime e adiciona mais um
//     console.log(i)
// }

// //! ATIVIDADE 2 - Tabuada de um n√∫mero
// let numero = parseInt(prompt("Digite um n√∫mero"))

// for(let i = 1; i <= 10; i++){   
//         console.log(`${numero} x ${i} = ${numero * i}`)
//     }

// //! ATIVIDADE 3 - Soma dos primeiros N n√∫meros naturais
// let n = parseInt(prompt("Digite um n√∫mero inteiro positivo: "))
// let soma = 0
 
// for(let i = 1; i <= n; i++){ // vai somando os valores at√© atingir o "n" digitado pelo usu√°rio
//     soma += i // soma = soma + 1
// }
// console.log(`A soma dos n√∫meros de 1 at√© ${n} √©: ${soma}`)

// //*N√çVEL INTERMEDI√ÅRIO
// //! ATIVIDADE 1 - Exibir n√∫meros pares de 1 a 50
// for(let i = 1; i <= 50; i++){
//     if(i % 2 == 0){
//         console.log(i)
//     }
// }

// //! ATIVIDADE 2 - Jogo de adivinha√ß√£o de um n√∫mero
// let numeroAleatorio = Math.floor(Math.random() * 100)  // Math.random = gera n√∫meros aleat√≥rios a cada rodada de  a 0 a 1 (sem incluir o 1), se multiplicado por 100, fica de 0 a 99
//                                                       // Math.floor =  arredonda os n√∫meros gerados
// let numeroUsuario = parseInt(prompt("Tente adivinhar o n√∫mero de 1 a 100: "))

// while (numeroUsuario != numeroAleatorio) {
//     if (numeroUsuario > numeroAleatorio) {
//         alert(`O n√∫mero ${numeroUsuario} √© maior que o correto.`)
//         numeroUsuario = parseInt(prompt("Voc√™ errou! Tente novamente."))
//     } else if (numeroUsuario < numeroAleatorio) {
//         alert(`O n√∫mero ${numeroUsuario} √© menor que o correto.`)
//         numeroUsuario = parseInt(prompt("Voc√™ errou! Tente novamente."))
//     } break; //encerrar o while
// } 
//     alert("Parab√©ns voc√™ acertou o n√∫mero ü•≥!")


//! ATIVIDADE 3 - Contagem regressiva
// let numero = parseInt(prompt("Insira um n√∫mero inteiro positivo: "))

// console.log(numero)
// while (numero > 0){
//     console.log(--numero) // Primeiro ele decrementa o numero e dps imprime
// }

//* N√çVEL AVAN√áADO

// //! ATIVIDADE 1 - Soma dos d√≠gitos de um n√∫mero
// let numero = parseInt(prompt("Insira um n√∫mero inteiro e positivo: "))
// let soma = 0

// if (numero >= 0){
//     while(numero > 0){
//         soma += numero % 10 // pega o √∫ltimo d√≠gito do n√∫mero - divide por 10 e pega o resto acrescentando na vari√°vel soma
//         numero = Math.floor(numero / 10) // remove o √∫ltimo d√≠gito e volta novamente para a linha anterior at√© acabar o while.
//     }
//     console.log("A soma dos d√≠gitos √©: " + soma)
// } else {
//     console.log("O n√∫mero precisa ser inteiro e positivo")
// }

//! ATIVIDADE 2 - Fatorial de um n√∫mero - o fatorial √© um n√∫mero multiplicado pelo seu n√∫mero anterior
// let numero = parseInt(prompt("Digite um n√∫mero: "))
// let fatorial = 1 //n√£o pode se iniciar por 0, pois no final do c√°lculo iria multiplicar por 0

// for (let i = 1; i <= numero; i++){ // o i √© incrmentado mais 1 at√© chegar no n√∫mero inserido pelo usu√°rio
//     fatorial *= i // fatorial = fatorial * i 
// }
// console.log(`O fatorial de ${numero} √© ${fatorial}.`)

//! ATIVIDADE 3 - Inverter a sequ√™ncia de um n√∫mero
// let numero = parseInt(prompt("Digite um n√∫mero: ")) // Entrada do n√∫mero
// let numeroInvertido = 0 // Sa√≠da n√∫mero
// let flagNegativo = false // Caso o n√∫mero inserido seja negativo

// if(numero < 0) {
//     numero *= -1 // Multiplicar o n√∫mero por -1 para o mesmo ficar negativo
//     flagNegativo = true
// }

// while(numero > 0) {
//     let unidade = numero % 10 //Para pegar o √∫ltimo d√≠gito (unidade)
//     numeroInvertido = unidade + numeroInvertido * 10 // Guardando o n√∫mero ap√≥s a invers√£o
//     numero = (numero - unidade) / 10 // removendo a unidade para voltar para o while at√© chegar a 0
// }

// if(flagNegativo) numeroInvertido *= -1  // Ap√≥s a invers√£o feita no while, multiplica por -1 para ficar negativo

// alert(`Ap√≥s a invers√£o o n√∫mero se resulta em ${numeroInvertido}`)

//! ATIVIDADE 4 - N√∫meros perfeitos de 1 a 1000
console.log("Entre 1 e 1000 os n√∫meros perfeitos s√£o: ")

for(let numero_testado = 1; numero_testado <= 1000; numero_testado++){  // Testa um por um qual √© perfeito
    let somaDivisores = 0

    for(let divisor_testado = 1; divisor_testado < numero_testado; divisor_testado++){ // Testa os divisores um por um
        if(numero_testado % divisor_testado === 0){  // Verifica se √© divisor
            somaDivisores += divisor_testado
        }
    }

    const numerosPerfeitos = [numero_testado]

    if(somaDivisores === numero_testado){ // Veriica√ß√£o do n√∫mero perfeito
        let mensagem = numerosPerfeitos.map(numero => numero)   
        console.log(mensagem)
    }
}
